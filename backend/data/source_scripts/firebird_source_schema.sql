/* ---- Firebird Source Schema ---- */

CREATE TABLE STAFF (
    STAFF_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FULL_NAME VARCHAR(200),
    ROLE_CODE VARCHAR(50),
    HOURLY_RATE DECIMAL(10,2),
    HIRE_DATE DATE,
    EMAIL VARCHAR(200)
);

CREATE TABLE CLIENTS_SRC (
    CLIENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CLIENT_NAME VARCHAR(200),
    CLIENT_TYPE_CODE CHAR(1), -- I, C, G
    INDUSTRY VARCHAR(100),
    ONBOARDED_AT DATE,
    PRIMARY_CONTACT VARCHAR(200),
    PRIMARY_CONTACT_EMAIL VARCHAR(200)
);

CREATE TABLE PROJECTS (
    PROJECT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CLIENT_ID INTEGER,
    TITLE VARCHAR(200),
    PRACTICE_AREA VARCHAR(100),
    RESPONSIBLE_STAFF INTEGER,
    OPENED_ON DATE,
    CLOSED_ON DATE,
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS_SRC(CLIENT_ID),
    FOREIGN KEY (RESPONSIBLE_STAFF) REFERENCES STAFF(STAFF_ID)
);

CREATE TABLE TIMESHEETS (
    TIMESHEET_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PROJECT_ID INTEGER,
    STAFF_ID INTEGER,
    WORK_DATE DATE,
    HOURS_WORKED DECIMAL(6,2),
    BILL_RATE DECIMAL(10,2),
    NOTES VARCHAR(500),
    BILLED_FLAG CHAR(1),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID),
    FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID)
);

CREATE TABLE BILLING (
    INVOICE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CLIENT_ID INTEGER,
    INVOICE_NO VARCHAR(50),
    INVOICE_DATE DATE,
    DUE_DATE DATE,
    STATUS VARCHAR(20),
    TOTAL_AMOUNT DECIMAL(12,2),
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS_SRC(CLIENT_ID)
);

CREATE TABLE BILLING_ITEMS (
    ITEM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INVOICE_ID INTEGER,
    TIMESHEET_ID INTEGER,
    DESCRIPTION VARCHAR(500),
    QTY DECIMAL(10,2),
    UNIT_PRICE DECIMAL(10,2),
    LINE_TOTAL DECIMAL(12,2),
    FOREIGN KEY (INVOICE_ID) REFERENCES BILLING(INVOICE_ID),
    FOREIGN KEY (TIMESHEET_ID) REFERENCES TIMESHEETS(TIMESHEET_ID)
);

CREATE TABLE RECEIPTS (
    RECEIPT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INVOICE_ID INTEGER,
    RECEIVED_ON DATE,
    AMOUNT DECIMAL(12,2),
    METHOD VARCHAR(50),
    FOREIGN KEY (INVOICE_ID) REFERENCES BILLING(INVOICE_ID)
);

CREATE TABLE VENDORS_SRC (
    VENDOR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VENDOR_NAME VARCHAR(200),
    VENDOR_TYPE VARCHAR(100),
    CONTACT_INFO VARCHAR(200)
);

CREATE TABLE EXPENSES_SRC (
    EXPENSE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VENDOR_ID INTEGER,
    PROJECT_ID INTEGER,
    EXPENSE_DATE DATE,
    AMOUNT DECIMAL(12,2),
    DESCRIPTION VARCHAR(500),
    FOREIGN KEY (VENDOR_ID) REFERENCES VENDORS_SRC(VENDOR_ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID)
);

CREATE TABLE TRUST_LEDGER (
    TRUST_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CLIENT_ID INTEGER,
    BANK_NAME VARCHAR(200),
    ACCOUNT_NUMBER VARCHAR(50),
    TXN_DATE DATE,
    TXN_TYPE VARCHAR(20),
    AMOUNT DECIMAL(12,2),
    MEMO VARCHAR(500),
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS_SRC(CLIENT_ID)
);

CREATE TABLE GL_TRANSACTIONS (
    GL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TXN_DATE DATE,
    ACCOUNT_CODE VARCHAR(20),
    DESCRIPTION VARCHAR(500),
    REFERENCE_TYPE VARCHAR(50),
    REFERENCE_ID INTEGER,
    AMOUNT DECIMAL(12,2),
    PERIOD_YM VARCHAR(7)
);

CREATE TABLE STAFF_PERMISSIONS (
    PERMISSION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STAFF_ID INTEGER,
    RESOURCE VARCHAR(100),
    ACCESS_LEVEL VARCHAR(50),
    FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID)
);

CREATE TABLE AUDIT_CHANGE_LOG (
    LOG_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID INTEGER,
    ACTION VARCHAR(50),
    TABLE_NAME VARCHAR(100),
    RECORD_ID INTEGER,
    TS TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES STAFF(STAFF_ID)
);

CREATE TABLE REG_REPORTS (
    REPORT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    REPORT_TYPE VARCHAR(100),
    FILING_DATE DATE,
    PREPARED_BY INTEGER,
    SUBMITTED_TO VARCHAR(200),
    FOREIGN KEY (PREPARED_BY) REFERENCES STAFF(STAFF_ID)
);
